// Imported required packages
import express from "express";
import path from "path";
import cors from "cors";
import bodyParser from "body-parser";
import mongoose from "mongoose";
import dotenv from "dotenv";
import routes from './Router/routes.js';

// Created express server
const app = express();
mongoose.Promise = global.Promise;

dotenv.config();

// Connect MongoDB Database
const DB = process.env.MONGO_URI;

mongoose
  .connect(DB)
  .then(() => {
    console.log("Your Database is Connected Successfully !!!");
  })
  .catch((err) => {
    console.log("Something Error " + err);
  });

// Enabled CORS
app.use(cors());

// Convert Incoming Data to JSON Format
app.use(bodyParser.json());

app.use('/employee', routes);

// Setup for the Server Port Number
const PORT = process.env.PORT || 3030;

// Starting our Express Server
const server = app.listen(PORT, () => {
  console.log(`Server is running on ${PORT} successfully`);
});




Schema Modal Example

const mongoose = require("mongoose");
const validator = require("validator");

const usersSchema = new mongoose.Schema({
    fname: {
        type: String,
        required: true,
        trim: true
    },
    lname: {
        type: String,
        required: true,
        trim: true
    },
    email: {
        type: String,
        required: true,
        unique: true,
        validate(value) {
            if (!validator.isEmail(value)) {
                throw Error("not valid email")
            }
        }
    },
    mobile: {
        type: String,
        required: true,
        unique: true,
        minlength: 10,
        maxlength: 10
    },
    gender: {
        type: String,
        required: true,
    },
    status: {
        type: String,
        required: true,
    },
    profile: {
        type: String,
        required: true,
    },
    location: {
        type: String,
        required: true,
    },
    datecreated:Date,
    dateUpdated:Date
});

// model
const users = new mongoose.model("users",usersSchema);

module.exports = users;
